// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using judocas.Data;

namespace judocas.Migrations
{
    [DbContext(typeof(judocasContext))]
    [Migration("20190910215254_migration2")]
    partial class migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("judocas.Models.Aluno", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ALUNO")
                        .HasColumnType("BIGINT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnName("CPF")
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnName("DATA_NASC")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("EnderecoIdEndereco");

                    b.Property<long?>("FaixaIdFaixa");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnName("OBSERVACOES")
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("RGIdRG");

                    b.Property<string>("RegistroCbj")
                        .IsRequired()
                        .HasColumnName("REGISTRO_CBJ")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telefone1")
                        .IsRequired()
                        .HasColumnName("TELEFONE_1")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefone2")
                        .IsRequired()
                        .HasColumnName("TELEFONE_2")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoIdEndereco");

                    b.HasIndex("FaixaIdFaixa");

                    b.HasIndex("RGIdRG");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("judocas.Models.Endereco", b =>
                {
                    b.Property<long?>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnName("BAIRRO")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnName("CEP")
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnName("CIDADE")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnName("ESTADO")
                        .HasColumnType("nvarchar(2)");

                    b.Property<long?>("IdFiliado")
                        .IsRequired()
                        .HasColumnName("ID_FILIADO")
                        .HasColumnType("BIGINT");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnName("NUMERO")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnName("RUA")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdEndereco");

                    b.ToTable("ENDERECO");
                });

            modelBuilder.Entity("judocas.Models.Faixa", b =>
                {
                    b.Property<long?>("IdFaixa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_FAIXA")
                        .HasColumnType("BIGINT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnName("DATA_ENTREGA")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO_FAIXA")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("IdFiliado")
                        .IsRequired()
                        .HasColumnName("ID_FILIADO")
                        .HasColumnType("BIGINT");

                    b.HasKey("IdFaixa");

                    b.HasIndex("IdFiliado");

                    b.ToTable("Faixa");
                });

            modelBuilder.Entity("judocas.Models.Filiado", b =>
                {
                    b.Property<long?>("IdFiliado")
                        .HasColumnName("ID_FILIADO")
                        .HasColumnType("BIGINT");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnName("CPF")
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnName("DATA_NASC")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnName("OBSERVACOES")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RegistroCbj")
                        .IsRequired()
                        .HasColumnName("REGISTRO_CBJ")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telefone1")
                        .IsRequired()
                        .HasColumnName("TELEFONE_1")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefone2")
                        .IsRequired()
                        .HasColumnName("TELEFONE_2")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdFiliado");

                    b.ToTable("Filiado");
                });

            modelBuilder.Entity("judocas.Models.Professor", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PROFESSOR")
                        .HasColumnType("BIGINT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnName("CPF")
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnName("DATA_NASC")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("FaixaIdFaixa");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnName("OBSERVACOES")
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("RGIdRG");

                    b.Property<string>("RegistroCbj")
                        .IsRequired()
                        .HasColumnName("REGISTRO_CBJ")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telefone1")
                        .IsRequired()
                        .HasColumnName("TELEFONE_1")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefone2")
                        .IsRequired()
                        .HasColumnName("TELEFONE_2")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("FaixaIdFaixa");

                    b.HasIndex("RGIdRG");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("judocas.Models.RG", b =>
                {
                    b.Property<long?>("IdRG")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_RG")
                        .HasColumnType("BIGINT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("IdFiliado")
                        .IsRequired()
                        .HasColumnName("ID_FILIADO")
                        .HasColumnType("BIGINT");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnName("NUMERO")
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("OrgaoExpedidor")
                        .IsRequired()
                        .HasColumnName("ORGAO_EXPEDIDOR")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdRG");

                    b.ToTable("RG");
                });

            modelBuilder.Entity("judocas.Models.Aluno", b =>
                {
                    b.HasOne("judocas.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoIdEndereco");

                    b.HasOne("judocas.Models.Faixa", "Faixa")
                        .WithMany()
                        .HasForeignKey("FaixaIdFaixa");

                    b.HasOne("judocas.Models.RG", "RG")
                        .WithMany()
                        .HasForeignKey("RGIdRG");
                });

            modelBuilder.Entity("judocas.Models.Faixa", b =>
                {
                    b.HasOne("judocas.Models.Filiado", "Filiado")
                        .WithMany("Faixas")
                        .HasForeignKey("IdFiliado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("judocas.Models.Filiado", b =>
                {
                    b.HasOne("judocas.Models.Endereco", "Endereco")
                        .WithOne("Filiado")
                        .HasForeignKey("judocas.Models.Filiado", "IdFiliado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("judocas.Models.RG", "RG")
                        .WithOne("Filiado")
                        .HasForeignKey("judocas.Models.Filiado", "IdFiliado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("judocas.Models.Professor", b =>
                {
                    b.HasOne("judocas.Models.Faixa", "Faixa")
                        .WithMany()
                        .HasForeignKey("FaixaIdFaixa");

                    b.HasOne("judocas.Models.RG", "RG")
                        .WithMany()
                        .HasForeignKey("RGIdRG");
                });
#pragma warning restore 612, 618
        }
    }
}
